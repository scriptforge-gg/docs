"use strict";(self.webpackChunksfggv_78282=self.webpackChunksfggv_78282||[]).push([[1877],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),y=r,d=p["".concat(s,".").concat(y)]||p[y]||f[y]||o;return n?a.createElement(d,i(i({ref:t},u),{},{components:n})):a.createElement(d,i({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=y;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}y.displayName="MDXCreateElement"},3380:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:2},i="Configuration",l={unversionedId:"Multiplayer jobs/configuration",id:"Multiplayer jobs/configuration",title:"Configuration",description:"Most Important Values",source:"@site/docs/Multiplayer jobs/configuration.md",sourceDirName:"Multiplayer jobs",slug:"/Multiplayer jobs/configuration",permalink:"/docs/Multiplayer jobs/configuration",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docs",previous:{title:"Installation",permalink:"/docs/Multiplayer jobs/installation"},next:{title:"Config file",permalink:"/docs/Multiplayer jobs/Farmer Job/config-file"}},s={},c=[{value:"Most Important Values",id:"most-important-values",level:2},{value:"Player Payouts",id:"player-payouts",level:3},{value:"Players activity check",id:"players-activity-check",level:3},{value:"Difficulty",id:"difficulty",level:3}],u={toc:c},p="wrapper";function f(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"configuration"},"Configuration"),(0,r.kt)("h2",{id:"most-important-values"},"Most Important Values"),(0,r.kt)("p",null,"Most job configuration files are similar. Here, you can learn about the most important ones:"),(0,r.kt)("h3",{id:"player-payouts"},"Player Payouts"),(0,r.kt)("p",null,"There are two types of payouts:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Base payout and bonus percentage for each additional player."),(0,r.kt)("li",{parentName:"ul"},"Fixed payouts for a given number of people.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="config.lua"',title:'"config.lua"'},"payout = {\n    -- Bonus system (there's a base payout and for each additional player, a bonus percentage)\n    useBonusPercent = false, -- Uses basePayout and bonusPercent per player\n    basePayout = 500,\n    -- 0.25 = 25%\n    bonusPercent = 0.25,\n    -- Total payout for each number of players\n    playerPayouts = {\n        [1] = 300,\n        [2] = 600,\n        [3] = 900,\n        [4] = 1200,\n        [5] = 1500,\n        [6] = 1800\n    },\n},\n")),(0,r.kt)("h3",{id:"players-activity-check"},"Players activity check"),(0,r.kt)("p",null,"Here, you can change when a player will be kicked out of the job by adjusting the following values:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"closeCheck")," (boolean) - Enables/disables distance check from the vehicle. If a player is farther than vehDist, they get kicked."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"noActionCheck")," (boolean) - Enables/disables an action check. If the difference in activity between the most active player and the checked player is higher or equal to noActionTimes, the checked player gets kicked."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"offlineTime")," (integer ","[seconds]",") - All of our jobs retain the player in the job in case of disconnection to prevent loss of progress. This value sets the time after which if a player doesn't reconnect, they will be automatically removed.")),(0,r.kt)("h3",{id:"difficulty"},"Difficulty"),(0,r.kt)("p",null,"You can set the difficulty for each number of players. The values differ between jobs. For more information, please refer to the configuration of the desired job. Here's an example configuration for the plumber job:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="config.lua"',title:'"config.lua"'},'-- Adjusts the difficulty (size of the path) based on the number of players in the job\ndifficulty = {\n    [1] = "small",\n    [2] = "small",\n    [3] = "medium",\n    [4] = "medium",\n    [5] = "big",\n    [6] = "big",\n},\n\n## Implementing Car Keys for Jobs\n\nTo implement car keys for all jobs, you need to edit the `SpawnVehicle` function in the `sf-jobsystem` as shown below:\n\n```lua title="server/main.lua:280"\nfunction SpawnVehicle(owner, jobId, jobName, modelHash, coords)\n    local entity = CreateVehicle(modelHash, coords.x, coords.y, coords.z, coords.w, true, false)\n    local tries = 0\n    while not DoesEntityExist(entity) do\n        Citizen.Wait(0)\n        tries = tries + 1\n        if tries > 50 then return end\n    end\n    -- You can change vehicle plate here\n    if(jobName:len() > 7) then\n        jobName = jobName:sub(0, 7)\n    end\n    local plate = string.upper(jobName)..jobId\n    if(plate:len() > 8) then\n        plate = jobName:sub(0, 0 - (tostring(jobId)):len())..jobId\n    elseif(plate:len() < 8) then\n        local left = (8-plate:len())\n        plate = plate..jobName:sub(0, left)\n    end\n\n    SetVehicleNumberPlateText(entity, plate)\n    while not string.find(GetVehicleNumberPlateText(entity), plate) do\n        Citizen.Wait(0)\n    end\n    -- You can add your keys code below (owner = source of the player, GetVehicleNumberPlateText(entity) = vehicle plate)\n    // highlight-start\n    -- For example like this:\n    exports.ox_inventory:AddItem(tonumber(owner), "carkey", 1, GetVehicleNumberPlateText(entity))\n    // highlight-end\n    if(qbKeys) then\n        TriggerClientEvent("sf-jobsystem:qbKeys", owner, GetVehicleNumberPlateText(entity))\n    end\n    return entity\nend\n')))}f.isMDXComponent=!0}}]);