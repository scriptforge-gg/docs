"use strict";(self.webpackChunksfggv_78282=self.webpackChunksfggv_78282||[]).push([[208],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),d=a,m=p["".concat(s,".").concat(d)]||p[d]||f[d]||o;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9506:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:1},i="Configuration",l={unversionedId:"Trunks/config",id:"Trunks/config",title:"Configuration",description:"Explaining every config value of sf-trunks",source:"@site/docs/Trunks/config.md",sourceDirName:"Trunks",slug:"/Trunks/config",permalink:"/docs/Trunks/config",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docs",previous:{title:"Commands",permalink:"/docs/Trunks/commands"},next:{title:"ESX installation",permalink:"/docs/Trunks/esx-installation"}},s={},u=[{value:"Explaining every config value of sf-trunks",id:"explaining-every-config-value-of-sf-trunks",level:2},{value:"DevMode",id:"devmode",level:2},{value:"UseProgressBar",id:"useprogressbar",level:2},{value:"OffsetEditorKeys",id:"offseteditorkeys",level:2},{value:"Camera",id:"camera",level:2},{value:"EnabledKeysWhileInTrunk",id:"enabledkeyswhileintrunk",level:2}],c={toc:u},p="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"configuration"},"Configuration"),(0,a.kt)("h2",{id:"explaining-every-config-value-of-sf-trunks"},"Explaining every config value of sf-trunks"),(0,a.kt)("p",null,"Remember to configure the script before usage."),(0,a.kt)("h2",{id:"devmode"},"DevMode"),(0,a.kt)("p",null,"DevMode enables command ",(0,a.kt)("inlineCode",{parentName:"p"},"/trunk_create")," to be used by anyone on the server. This command gives user an ability to use trunk editor, to make any chosen vehicle take advantage of using trunks. By default it is set to ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),". "),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"Remember! Never use DevMode on production!")),(0,a.kt)("h2",{id:"useprogressbar"},"UseProgressBar"),(0,a.kt)("p",null,"When UseProgressBar is set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),", trunks will use ProgressBar before four actions that player can perform:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Player getting into the trunk"),(0,a.kt)("li",{parentName:"ul"},"Player getting out of the trunk"),(0,a.kt)("li",{parentName:"ul"},"Player putting in other player into the trunk"),(0,a.kt)("li",{parentName:"ul"},"Player gettting other player out of the trunk")),(0,a.kt)("p",null,"Each of those actions have separate sections in the config:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"GetIntoTrunkProgressBar"),(0,a.kt)("li",{parentName:"ul"},"ExitTrunkProgressBar"),(0,a.kt)("li",{parentName:"ul"},"PutPlayerIntoTrunkProgressBar"),(0,a.kt)("li",{parentName:"ul"},"GetPlayerOutOfTrunkProgressBar")),(0,a.kt)("p",null,"In those sections you can set ",(0,a.kt)("inlineCode",{parentName:"p"},"duration")," in miliseconds of each progressbar. You can also set if progressbar is cancelable by changing ",(0,a.kt)("inlineCode",{parentName:"p"},"canCancel")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,a.kt)("h2",{id:"offseteditorkeys"},"OffsetEditorKeys"),(0,a.kt)("p",null,"This section contains configuration for controls used in editor mode. Each action is set in the same way."),(0,a.kt)("p",null,"For example: ",(0,a.kt)("inlineCode",{parentName:"p"},'{ 191, "ENTER" }')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"191 - it's index of control\nENTER - it's text shown in helper UI while using editor\n")),(0,a.kt)("p",null,"You can easily find indexes for controls in FiveM docs or by using ",(0,a.kt)("a",{parentName:"p",href:"https://mmleczek.com/tools/controls/"},"https://mmleczek.com/tools/controls/")),(0,a.kt)("h2",{id:"camera"},"Camera"),(0,a.kt)("p",null,"Here you can set up behavior of the camera while being in the trunk."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Stationary - by default it is set to ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),". This means that player is able to look around the vehicle. If you do not want such behavior, you can set it to ",(0,a.kt)("inlineCode",{parentName:"li"},"true"),"."),(0,a.kt)("li",{parentName:"ul"},"StationaryHeight - this parameter changes how high camera is relative to vehicle. By default it is set to ",(0,a.kt)("inlineCode",{parentName:"li"},"0.2")," meters."),(0,a.kt)("li",{parentName:"ul"},"DistanceFromCar - here you can set how far camera is from the car. By default it is set to ",(0,a.kt)("inlineCode",{parentName:"li"},"3.0")," meters."),(0,a.kt)("li",{parentName:"ul"},"FreeCameraSpeed - it is defining how sensitive non stationary camera is. By default it is set to ",(0,a.kt)("inlineCode",{parentName:"li"},"450.0"),".")),(0,a.kt)("h2",{id:"enabledkeyswhileintrunk"},"EnabledKeysWhileInTrunk"),(0,a.kt)("p",null,"This contans a list of controls that are enabled while player is inside trunk. By default, controls 249 and 245 are enabled (249 - it is for push to talk, 245 - it is for chat)"))}f.isMDXComponent=!0}}]);